@model EntityLayer.Concrete.Blog

@{
    ViewData["Title"] = "BlogAdd";
    Layout = "~/Views/Shared/WriterLayout.cshtml";
}

<h1>Yeni Blog Girişi</h1>
<br />
@using (Html.BeginForm("BlogAdd", "Blog", FormMethod.Post))//Yönlendiriceği action u istiyor ve ne zaman çalışıcağını belirtiyoruz yani Post oldugu zaman çalısır.controlleri istiyorPost işlemini böyle yaptık form ile değil direk
{/*Form kullanılarak da yapılabilir burası*/
    @Html.Label("Blog Başlığı")
    @Html.TextBoxFor(x=>x.BlogTitle,new {@class="form-control"})
    @Html.ValidationMessageFor(x=>x.BlogTitle)
    <br />

    @Html.Label("Blog Görseli")
    @Html.TextBoxFor(x=>x.BlogeImage,new {@class="form-control"})
    @Html.ValidationMessageFor(x=>x.BlogeImage)
    <br />

    @Html.Label("Blog Küçük Görsel")
    @Html.TextBoxFor(x=>x.BlogThumbnailImage,new {@class="form-control"})
    @Html.ValidationMessageFor(x=>x.BlogThumbnailImage)
    <br />

    @Html.Label("Kategori")
    @Html.DropDownListFor(x=>x.CategoryID,(List<SelectListItem>)ViewBag.cv,new {@class="form-control"})
                //CategoryId için çalısıcaz değerini liste formatında controllerdaki viewbag ile taşıcaz
    <br />

    @Html.Label("Blog İçeriği")
    @Html.TextAreaFor(x=>x.BlogContent,15,3,new {@class="form-control"})
    @Html.ValidationMessageFor(x=>x.BlogContent)
    <br />
    <button class="btn btn-info">Yazıyı Kaydet</button>
}
